{"version":3,"sources":["component/icon.png","component/LoadingComponent.js","component/Login.js","component/SideBar.js","component/LoggedIn.js","component/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","className","style","position","left","top","transform","useStyles","makeStyles","button","background","padding","marginTop","dark","textAlign","display","justifyContent","alignItems","height","backgroundImage","backgroundRepeat","backgroundSize","color","light","backgroundColor","boxShadow","useState","isLoading","classes","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","AppBar","Toolbar","Typography","variant","title","Grid","container","direction","justify","Container","spacing","xs","sm","md","lg","item","styles","loginBox","twitterButtonGrid","Button","startIcon","twitterButton","href","registerBox","paddingTop","TextField","type","label","size","value","onChange","event","target","placeholder","endIcon","onClick","email","password","fetch","baseUrl","method","body","JSON","stringify","headers","credentials","then","response","ok","console","log","error","Error","status","statusText","message","json","res","alert","key","catch","width","flexDirection","paddingBottom","sideIcons","theme","sidebar","SideBar","props","ListItem","marginBottom","src","icon","alt","List","map","index","ListItemIcon","bottom","Avatar","photoUrl","socket","root","avatar","red","large","horitonzalCenter","UserCard","name","username","center","userCardHeader","Chip","clickable","paddingLeft","paddingRight","marginRight","Divider","float","checkbox","IndividualChat","tweet","sameRow","user","profile_image_url_https","spaceLeftTop","text","Date","created_at","toString","toLocaleString","undefined","timeZone","substr","marginLeft","boxBorder","border","selectedCard","overflow","sameColumn","LoggedIn","setIsLoading","online","setOnline","token","setToken","tokenSecret","setTokenSecret","setName","id","setId","allTweets","setAllTweets","setPhotoUrl","currentCard","setCurrentCard","SelectedCard","Card","profile_image_url","maxHeight","InputProps","endAdornment","InputAdornment","data","document","getElementById","replyto","length","id_str","parseInt","handlePostTweet","ConversationCard","CardHeader","component","useEffect","io","on","a","tempAllTweets","push","query","URLSearchParams","location","search","userData","get","tweets","startAdornment","select","MenuItem","borderRadius","screen_name","withRouter","path","to","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac0ec997.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.68716d43.png\";","import React from 'react';\n\nexport default function Login(){\n    return(\n        <div className=\"col-12\" style={{\n            position: 'absolute', left: '50%', top: '50%',\n            transform: 'translate(-50%, -50%)'\n        }}>\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading...</p>\n        </div>\n    );\n};","import React,{useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport '../App.css';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Loading from './LoadingComponent';\nimport TwitterIcon from '@material-ui/icons/Twitter';\n\nlet baseUrl='http://localhost:4000/';\nconst useStyles=makeStyles({\n  button:{\n    background:'linear-gradient(45deg,#073312,#A12345)',\n    padding:'15px 30px',\n    marginTop:'3vh'\n  },\n  dark:{\n    textAlign: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    backgroundImage: `url('background.jpg')`,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    color:'#282c34'\n  },\n  light:{\n    backgroundColor:'#6E6E6E',\n    color:'#282c34',\n    boxShadow: \"5px 5px 5px\"\n  },\n})\n\nexport default function Login(){\n\n  const handleRegister=(email,password)=>{\n\n    fetch(baseUrl+'register',{\n      method:'POST',\n      body:JSON.stringify({\n        email:email,\n        password:password\n      }),\n      headers:{\n        'Content-Type': 'application/json',\n      },\n      credentials:'same-origin'\n    })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        console.log(response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n    .then(response => response.json())\n    .then(res=>{alert(res.key);setRegisterEmail('');setRegisterPassword('')})\n    .catch(error=>alert(error.message))\n\n  }\n  const [isLoading,setIsLoading]=useState(false);\n  const classes=useStyles();\n  const [registerEmail,setRegisterEmail]=useState('');\n  const [registerPassword,setRegisterPassword]=useState('');\n\n  if(!isLoading)\n  return (\n    <>\n    <AppBar style={{backgroundColor:'transparent'}}>\n      <Toolbar>\n        <Typography variant=\"h5\" className={classes.title}>\n          Tweet Mention\n        </Typography>\n      </Toolbar>\n    </AppBar>\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\" className={classes.dark}\n    >\n      <Container style={{height:'65vh'}}>\n        <Grid container spacing={4} justify='space-around'>\n          <Grid xs={12} sm={6} md={4} lg={4} item>\n            <Paper className={classes.light} style={styles.loginBox}>\n              <Grid >\n                <h1 >Login</h1>\n                <hr/>\n              </Grid>\n              <Grid style={styles.twitterButtonGrid}>\n                <Button \n                  startIcon={<TwitterIcon/>}\n                  style={styles.twitterButton}\n                  variant='contained' color='primary'\n                  href=\"http://localhost:4000/login\">\n                  Login with Twitter\n                </Button>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid xs={12} sm={6} md={4} lg={4} item>\n            <Paper className={classes.light} style={styles.registerBox}>\n              <h1 style={{paddingTop:'2vh'}}>Register</h1>\n              <hr/>\n              <Grid item>\n              <TextField \n                variant='outlined'\n                color='secondary'\n                type=\"email\"\n                label=\"Email\"\n                size='large'\n                value={registerEmail}\n                onChange={(event)=>setRegisterEmail(event.target.value)}\n                placeholder=\"example@temp.com\"\n              />\n              </Grid>\n              <Grid item>\n              <TextField \n                style={{marginTop:'5vh'}}\n                variant='outlined'\n                color='secondary'\n                type=\"password\"\n                label=\"Password\"\n                size='large'\n                value={registerPassword}\n                onChange={(event)=>setRegisterPassword(event.target.value)}\n                placeholder=\"Password\"\n              />\n              </Grid>\n              <Button \n                className={classes.button}\n                startIcon={<SaveIcon/>}\n                endIcon={<SaveIcon/>}\n                variant='contained' color='primary'\n                onClick={()=>handleRegister(registerEmail,registerPassword)}>\n                Register\n              </Button>\n            </Paper>\n          </Grid>\n        </Grid>\n        \n      </Container>\n    </Grid>\n    </>\n  );\n  else\n    return(\n      <Loading/>\n    )\n}\n\nconst styles={\n  loginBox:{\n    marginTop:'2vh',\n    display:'flex',\n    height:'50vh',\n    width:'100%',\n    flexDirection:'column'\n  },\n  twitterButtonGrid:{\n    display:'flex',\n    alignItems:'center',\n    justifyContent:'center',\n    marginTop:'7vh'\n  },\n  twitterButton:{\n    paddingTop:'10px',\n    paddingBottom:'10px'\n  },\n  registerBox:{\n    height:'50vh',\n    width:'100%'\n  }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleIcon from '@material-ui/icons/People';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport StorefrontIcon from '@material-ui/icons/Storefront';\nimport { Grid, List, ListItem } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DonutLargeRoundedIcon from '@material-ui/icons/DonutLargeRounded';\nimport Avatar from '@material-ui/core/Avatar';\nimport icon from './icon.png';\nlet sideIcons=[<QueryBuilderIcon/>,<HomeIcon/>,<PeopleIcon/>,<ForumIcon/>,<CreditCardIcon/>,<StorefrontIcon/>];\n\n\nconst useStyles = makeStyles((theme) => ({\n  sidebar:{\n    height:'100vh',\n    width:'60px',\n    backgroundColor:'#9c9da0'\n  }\n}));\n\nexport default function SideBar(props) {\n  const classes = useStyles();\n\n  return (\n      <Grid className={classes.sidebar} item>\n        <ListItem button key={11} style={{marginTop:'2vh',marginBottom:'5vh'}}>\n          <img src={icon} alt=\"icon\" style={{width:'30px',paddingTop:'10px'}}/>\n        </ListItem>\n        <List>\n          {sideIcons.map((item, index) => (\n            <ListItem button key={index} style={{marginTop:'2vh'}}>\n              <ListItemIcon>{item}</ListItemIcon>\n            </ListItem>\n          ))}\n        </List>\n        <ListItem button key={9} style={{bottom:'12vh',position:'fixed',width:'60px'}}>\n          <DonutLargeRoundedIcon/>\n        </ListItem>\n        <ListItem button key={10} style={{bottom:'5vh',position:'fixed',width:'60px',padding:'10px'}}>\n          <Avatar alt=\"dp\" src={props.photoUrl} />\n        </ListItem>\n        \n      </Grid>\n  );\n}\n","import { Divider, Grid, MenuItem, TextField, Typography } from '@material-ui/core';\nimport React,{useEffect,useState} from 'react';\nimport SideBar from './SideBar';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { red } from '@material-ui/core/colors';\nimport { Chip,Card, CardHeader, InputAdornment, } from '@material-ui/core';\nimport Loading from './LoadingComponent';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CallIcon from '@material-ui/icons/Call';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport SendIcon from '@material-ui/icons/Send';\nimport io from 'socket.io-client';\nvar socket;\nlet baseUrl=\"http://http://45.79.127.113:4000/\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom:15\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  large: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n  },\n  horitonzalCenter:{\n    display:'flex',\n    paddingTop:'1vh',\n    justifyContent:'center'\n  }\n}));\n\nfunction UserCard({name,photoUrl,username}){\n\n  let classes=useStyles();\n  return(\n    <Grid style={styles.center}>\n      <Grid style={styles.userCardHeader}>\n        <CancelRoundedIcon/>\n      </Grid>\n      <Grid className={classes.horitonzalCenter}>\n        <Avatar src={photoUrl} className={classes.large}  />\n      </Grid>\n      <Grid className={classes.horitonzalCenter}>\n        <h3>{name}</h3>\n      </Grid>\n      <Grid className={classes.horitonzalCenter} style={{marginTop:'-2vh'}}>\n        @{username}\n      </Grid>\n      <Grid className={classes.horitonzalCenter}>\n        <Chip\n            icon={<CallIcon/>}\n            label=\"Call\"\n            clickable\n            style={{paddingLeft:'2px',paddingRight:'2px',marginRight:'5px'}}\n          />\n        <Chip\n            icon={<EmailIcon/>}\n            label=\"Email\"\n            clickable\n          />\n      </Grid>\n      <Grid style={{marginTop:'15vh'}}>\n        <Divider/>\n      </Grid>\n      <Grid style={{paddingLeft:'10px',display:'block',paddingTop:'20px'}}>\n        Tasks\n        <span style={{float:'right'}}><KeyboardArrowDownIcon/></span>\n      </Grid>\n      <Grid style={styles.checkbox}>\n        <label><input type=\"checkbox\" />Constant Task 1</label>\n      </Grid>\n\n      <Grid style={styles.checkbox}>\n        <label><input type=\"checkbox\" />Constant Task 2</label>\n      </Grid>\n\n      <Grid style={styles.checkbox}>\n        <label><input type=\"checkbox\" />Constant Task 3</label>\n      </Grid>\n\n      <Grid style={styles.checkbox}>\n        All Tasks\n        <Divider style={{width:'68px'}}/>\n      </Grid>\n      \n    </Grid>  \n  )\n}\n\nfunction IndividualChat(props){\n  let tweet=props.tweet;\n  return(\n    <Grid style={styles.sameRow}>\n      <Grid sm={10} item style={{...styles.sameRow,marginBottom:'3vh'}}>\n      <Grid>\n        <Avatar alt={tweet.user.name} src={tweet.user.profile_image_url_https}/>\n      </Grid>\n      <Grid style={styles.spaceLeftTop}>\n        <Typography>{tweet.text}</Typography>\n      </Grid>\n      </Grid>\n      <Grid item sm={2} style={styles.spaceLeftTop}>\n        <Typography>{(new Date(tweet.created_at)).toString().toLocaleString(undefined, {timeZone: 'Asia/Kolkata'}).toString().substr(16,5)+'\\n'+\n        (new Date(tweet.created_at)).toString().toLocaleString(undefined, {timeZone: 'Asia/Kolkata'}).toString().substr(4,6)}</Typography>\n      </Grid>\n    </Grid>   \n  )\n}\n\nfunction LoggedIn(props) {\n\n  const [isLoading,setIsLoading]=useState(true);\n  const [online,setOnline]=useState('Online');\n  const [token,setToken]=useState('');\n  const [tokenSecret,setTokenSecret]=useState('');\n  const [name,setName]=useState('');\n  const [id,setId]=useState('');\n  const [allTweets,setAllTweets]=useState('');\n  const [photoUrl,setPhotoUrl]=useState('background.jpg');\n  const [currentCard,setCurrentCard]=useState(0);\n\n  function handlePostTweet(){\n\n    setIsLoading(true);\n\n    let tweet=allTweets[currentCard];\n\n    let data={\n      status:document.getElementById(\"current\").value,\n      replyto:tweet[tweet.length-1].id_str,\n      token:token,\n      tokenSecret:tokenSecret,\n      id:id,\n      index:parseInt(currentCard)+1\n    };\n    \n    fetch(baseUrl+'tweet',{\n      method:'POST',\n      body:JSON.stringify(data),\n      headers:{\n        'Content-Type': 'application/json',\n      },\n      credentials:'same-origin'\n    })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n    .then(response => response.json())\n    .then(res=>{\n      setAllTweets(res.key);\n      setIsLoading(false);\n    })\n    .catch(error=>{alert(error.message);})\n  }\n\n  function SelectedCard(props){\n\n    const classes = useStyles();\n\n    return(\n      <Card className={classes.root} style={styles.boxBorder}>\n        <Grid item lg={12} sm={12} style={{...styles.sameRow,marginLeft:'20px',marginTop:'10px'}}>\n          <Avatar src={props.tweet[0].user.profile_image_url} style={{marginTop:'10px'}}/>\n          <h3 style={{marginLeft:'20px'}}>{props.tweet[0].user.name}</h3>\n          <Chip\n            label=\"Create a task\"\n            style={{marginLeft:'2vw',marginLeft:'30vw',paddingLeft:'10px',paddingRight:'10px',marginTop:'1.5vh',justifyContent:'flex-end'}}\n          />\n        </Grid>\n        <Divider/>\n        <Grid style={styles.selectedCard}>\n          <Grid style={{maxHeight:'50vh',overflow:'auto'}}>\n          {props.tweet.map((tweet,index)=>{\n            return (<IndividualChat key={index} tweet={tweet}/>)\n          })}\n          </Grid>\n          <Grid style={styles.bottom}>\n            <Avatar src={photoUrl}/>\n            <TextField\n                id=\"current\"\n                key=\"yoyo\"\n                InputProps={{\n                  endAdornment: <InputAdornment position=\"end\"><AttachmentIcon/></InputAdornment>\n                }}\n                style={{width:'40vw'}}\n                size='small'\n                variant='outlined'\n                type=\"text\"\n                placeholder=\"Reply...\"\n              />\n            <SendIcon style={{marginTop:'1vh',marginLeft:'1vw'}} onClick={()=>handlePostTweet()}/> \n          </Grid>\n        </Grid>\n      </Card>\n    )\n  }\n\n  function ConversationCard(props) {\n\n    const classes = useStyles();\n    \n    return (\n      <Card onClick={()=>setCurrentCard(props.index)} className={classes.root} style={styles.boxBorder}>\n        <CardHeader\n        style={{paddingBottom:0,paddingTop:10}}\n          avatar={\n            <Avatar src={props.tweet[0].user.profile_image_url}/>\n          }\n          title={props.tweet[0].user.name}\n        />\n        <Grid style={{paddingLeft:'72px',marginBottom:'10px',marginRight:'20px'}}>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.tweet[props.tweet.length-1].text.length<=56?props.tweet[props.tweet.length-1].text:props.tweet[props.tweet.length-1].text.substr(0,56)+\"..\"}\n          </Typography>\n        </Grid>\n      </Card>\n    );\n  }\n\n  useEffect(() => {\n\n    setIsLoading(true);\n    socket=io('/');\n\n    socket.on('update',async (data)=>{\n      // console.log(data);\n      setAllTweets(data.key);\n    })\n\n    socket.on('tweet',async (data)=>{\n      \n      // console.log(\"data\");\n      let {key,index}=data;\n      let tempAllTweets=allTweets;\n\n      if(index>=allTweets.length){\n        tempAllTweets.push([key]);\n      }\n      else{\n        tempAllTweets[index].push(key);\n      }\n\n      setAllTweets(tempAllTweets);\n    })//socket for streaming data\n\n    const query = new URLSearchParams(props.location.search);\n\n    setIsLoading(true);\n\n    let userData={\n      id:query.get('id'),\n      token:query.get('token'),\n      tokenSecret:query.get('tokenSecret'),\n      username:query.get('username'),\n    };\n    \n    fetch(baseUrl+'userdetails/',{\n      method:'POST',\n      body:JSON.stringify(userData),\n      headers:{\n        'Content-Type': 'application/json',\n      },\n      credentials:'same-origin'\n    })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n\n        console.log(\"IDHAR2\");\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n    .then(response => response.json())\n    .then(res=>{\n      setName(res.key.name);\n      setPhotoUrl(res.key.photoUrl);\n      setAllTweets(res.key.tweets);\n      setToken(query.get('token'));\n      setTokenSecret(query.get('tokenSecret'));\n      setId(query.get('id'))\n      setIsLoading(false);\n    })\n    .catch(error=>alert(error.message))\n    return ()=>{\n      setIsLoading(false);\n    }\n  },[])\n  \n  if(!isLoading)\n  return (\n    <Grid container>\n      <SideBar photoUrl={photoUrl}/>\n      <Grid style={{width:'90vw',marginTop:10,paddingLeft:'5vw',display:'flex',flexDirection:'column'}} item>\n        <Grid>\n          <Grid style={{float:'left'}}>\n            Updates\n            <Divider/>\n          </Grid>\n          <Grid style={{float:'right',paddingLeft:'5vw'}}>\n            User: {name}\n          </Grid>\n          <Grid style={{float:'right'}}>\n            Session: 34 minutes\n          </Grid>\n        </Grid>\n        <div style={{marginTop:'10vh'}}></div>\n        <Grid>\n          <Grid style={{display:'flex',float:'left'}}>\n          <Typography variant='h4'>Conversation</Typography>\n          <TextField\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\"><SearchIcon/></InputAdornment>,\n            }}\n            onChange={(event, value) => console.log(event.target.value)}\n            id=\"combo-box-demo\"\n            style={{marginLeft:'2vw',width:'200px'}}\n            size='small'\n            variant='outlined'\n            type=\"text\"\n            placeholder=\"Quick Search\"\n          />\n          <Chip\n            icon={<SwapHorizIcon/>}\n            label=\"Filter\"\n            clickable\n            style={{marginLeft:'2vw',paddingLeft:'10px',paddingRight:'10px',marginTop:'0.5vh'}}\n          />\n          </Grid>\n          <Grid style={{float:'right'}}>\n          <TextField onChange={(event)=>setOnline(event.target.value)} style={{marginTop:'1vh',height:'1vh',width:'100px'}} id=\"select\" value={online} select>\n            <MenuItem value=\"Online\" style={styles.sameRow}>\n              <Grid style={{marginRight:'10px',marginTop:'3px',display:'block',float:'left',width:'10px',height:'10px',borderRadius:'50%',backgroundColor:'green'}}></Grid>\n              Online\n            </MenuItem>\n            <MenuItem value=\"Offline\" style={styles.sameRow}>\n              <Grid style={{marginRight:'10px',marginTop:'3px',display:'block',float:'left',width:'10px',height:'10px',borderRadius:'50%',backgroundColor:'red'}}></Grid>\n              Offline\n            </MenuItem>\n          </TextField>\n          </Grid>\n        </Grid>\n        <div style={{marginTop:'5vh'}}></div>\n        <Grid lg={12} item style={styles.sameColumn}>\n          <Grid lg={12} item style={styles.sameRow}>\n            <Grid md={3} item style={{maxHeight: '74vh', overflow: 'auto'}}>\n              {allTweets!==''?allTweets.map((data,index)=>{\n                return data?<ConversationCard key={index} tweet={data} index={index}/>:<div></div>\n              }):<div></div>}\n            </Grid>\n            <Grid md={7} item style={{paddingRight:'10',paddingLeft:'20px'}}>\n              {currentCard!==''?<SelectedCard tweet={allTweets[currentCard]}/>:<div></div>}\n            </Grid>\n            <Grid md={2} item style={{height:'66.5vh',paddingTop:'10px',overflow:'auto',...styles.boxBorder}}>\n              {allTweets!==''?<UserCard name={allTweets[currentCard][0].user.name} photoUrl={allTweets[currentCard][0].user.profile_image_url_https} username={allTweets[currentCard][0].user.screen_name}/>:<div></div>}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n  else\n  return(\n    <Loading/>\n  )\n}\n\nconst styles={\n  center:{\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'center'\n  },\n  userCardHeader:{\n    display:'flex',\n    justifyContent:'flex-end',\n    paddingRight:'10px'\n  },\n  checkbox:{\n    paddingLeft:'10px',\n    marginBottom:'10px'\n  },\n  spaceLeftTop:{\n    marginLeft:'1vw',\n    marginTop:'1vh'\n  },\n  boxBorder:{\n    border:'1px solid grey'\n  },\n  selectedCard:{\n    paddingLeft:'20px',\n    marginBottom:'10px',\n    marginRight:'20px',\n    height:'55vh',\n    paddingTop:'3vh',\n    overflow: 'auto'\n  },\n  bottom:{\n    display:'flex',\n    flexDirection:'row',\n    marginBottom:'5vh'\n  },\n  sameRow:{\n    display:'flex',\n    flexDirection:'row'\n  },\n  sameColumn:{\n    display:'flex',\n    flexDirection:'column'\n  }\n}\n\nexport default LoggedIn;","import React from 'react';\nimport {Switch , Route, Redirect , withRouter} from 'react-router-dom';\nimport './style.css';\nimport Login from './Login';\nimport LoggedIn from './LoggedIn';\nfunction Main(props){\n  return(\n    <Switch location={props.location}>\n      <Route path='/loginpage' component={Login} />\n      <Route path='/loggedin' component={LoggedIn}/>\n      <Redirect to=\"/loginpage\" />\n    </Switch>\n  )\n}\nexport default withRouter((Main));;","import React from 'react';\nimport './index.css';\n\nimport {BrowserRouter} from 'react-router-dom';\nimport Main from \"./component/Main\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Main />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}